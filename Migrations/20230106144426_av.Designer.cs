// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect2.Data;

#nullable disable

namespace Proiect2.Migrations
{
    [DbContext(typeof(Proiect2Context))]
    [Migration("20230106144426_av")]
    partial class av
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Proiect2.Models.Beauty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("BrandID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpirationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("ID");

                    b.HasIndex("BrandID");

                    b.HasIndex("ExpirationID");

                    b.ToTable("Beauty");
                });

            modelBuilder.Entity("Proiect2.Models.BeautyCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BeautyID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BeautyID");

                    b.HasIndex("CategoryID");

                    b.ToTable("BeautyCategory");
                });

            modelBuilder.Entity("Proiect2.Models.Brand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Proiect2.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Proiect2.Models.Expiration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ExpirationProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Expiration");
                });

            modelBuilder.Entity("Proiect2.Models.Tester", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tester");
                });

            modelBuilder.Entity("Proiect2.Models.Testing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("BeautyID")
                        .HasColumnType("int");

                    b.Property<int?>("TesterID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TestingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("BeautyID");

                    b.HasIndex("TesterID");

                    b.ToTable("Testing");
                });

            modelBuilder.Entity("Proiect2.Models.Beauty", b =>
                {
                    b.HasOne("Proiect2.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandID");

                    b.HasOne("Proiect2.Models.Expiration", "Expiration")
                        .WithMany("Cosmetics")
                        .HasForeignKey("ExpirationID");

                    b.Navigation("Brand");

                    b.Navigation("Expiration");
                });

            modelBuilder.Entity("Proiect2.Models.BeautyCategory", b =>
                {
                    b.HasOne("Proiect2.Models.Beauty", "Beauty")
                        .WithMany("BeautyCategories")
                        .HasForeignKey("BeautyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiect2.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beauty");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Proiect2.Models.Testing", b =>
                {
                    b.HasOne("Proiect2.Models.Beauty", "Beauty")
                        .WithMany()
                        .HasForeignKey("BeautyID");

                    b.HasOne("Proiect2.Models.Tester", "Tester")
                        .WithMany("Testings")
                        .HasForeignKey("TesterID");

                    b.Navigation("Beauty");

                    b.Navigation("Tester");
                });

            modelBuilder.Entity("Proiect2.Models.Beauty", b =>
                {
                    b.Navigation("BeautyCategories");
                });

            modelBuilder.Entity("Proiect2.Models.Expiration", b =>
                {
                    b.Navigation("Cosmetics");
                });

            modelBuilder.Entity("Proiect2.Models.Tester", b =>
                {
                    b.Navigation("Testings");
                });
#pragma warning restore 612, 618
        }
    }
}
